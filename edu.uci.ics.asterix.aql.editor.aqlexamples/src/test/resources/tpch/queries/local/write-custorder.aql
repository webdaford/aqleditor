use dataverse tpch;

declare type LineItemType as closed {
  l_orderkey: int32, 
  l_partkey: int32, 
  l_suppkey: int32, 
  l_linenumber: int32, 
  l_quantity: double, 
  l_extendedprice: double,
  l_discount: double, 
  l_tax: double,
  l_returnflag: string, 
  l_linestatus: string, 
  l_shipdate: string,
  l_commitdate: string, 
  l_receiptdate: string, 
  l_shipinstruct: string, 
  l_shipmode: string, 
  l_comment: string
}

declare type OrderType as closed {
  o_orderkey: int32, 
  o_custkey: int32, 
  o_orderstatus: string, 
  o_totalprice: double, 
  o_orderdate: string, 
  o_orderpriority: string,
  o_clerk: string, 
  o_shippriority: int32, 
  o_comment: string
}

declare type CustomerType as closed {
  c_custkey: int32, 
  c_name: string, 
  c_address: string, 
  c_nationkey: int32, 
  c_phone: string, 
  c_acctbal: double, 
  c_mktsegment: string,
  c_comment: string
}

declare type CustOrderType as closed {
  co_custkey: int32, 
  co_orderkey: int32
}

declare nodegroup group1 on nc1, nc2;

declare dataset LineItems(LineItemType)
  primary key l_orderkey, l_linenumber on group1;
declare dataset Orders(OrderType)
  primary key o_orderkey on group1;
declare dataset Customers(CustomerType) 
  primary key c_custkey on group1;
declare dataset CustOrder(CustOrderType)
  primary key co_custkey on group1;

insert into dataset CustOrder 
( for $c in dataset('Customers')
  for $o in dataset('Orders')
  where $c.c_custkey = $o.o_custkey
   return
  { "co_custkey": $c.c_custkey, "co_orderkey": $o.o_orderkey }
);
