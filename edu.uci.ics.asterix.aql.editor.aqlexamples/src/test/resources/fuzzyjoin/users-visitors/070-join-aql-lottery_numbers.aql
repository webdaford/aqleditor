use dataverse fuzzy1;

declare type UserType as open {
  uid: int32, 
  name: string,
  lottery_numbers: {{int32}},
  interests: {{string}}
}

declare type VisitorType as open {
  vid: int32, 
  name: string,
  lottery_numbers: {{int32}},
  interests: {{string}}
}

declare nodegroup group1 on nc1, nc2;

declare dataset Users(UserType) 
  primary key uid on group1;
declare dataset Visitors(VisitorType) 
  primary key vid on group1;

write output to nc1:'/tmp/users-visitors.adm';

//
// -- - Stage 3 - --
//
for $ridpair in 
    //
    // -- - Stage 2 - --
    //
    for $user in dataset('Users')
    let $tokens_user :=
        for $lottery_number in $user.lottery_numbers
        for $token at $i in
            //
            // -- - Stage 1 - --
            //
            for $user in dataset('Users')
            for $lottery_number in $user.lottery_numbers 
            group by $item := $lottery_number with $user 
            order by count($user)
            return $item
        where $lottery_number = $token
        order by $i
        return $i
    for $prefix_token_user in subset-collection(
                                $tokens_user, 
                                0,
                                prefix-len(
                                    len($tokens_user), 'Jaccard', .5))

    for $visitor in dataset('Visitors')
    let $tokens_visitor :=
        for $lottery_number in $visitor.lottery_numbers
        for $token at $i in
            //
            // -- - Stage 1 - --
            //
            for $user in dataset('Users')
            for $lottery_number in $user.lottery_numbers 
            group by $item := $lottery_number with $user 
            order by count($user)
            return $item
        where $lottery_number = $token
        order by $i
        return $i
    for $prefix_token_visitor in subset-collection(
                                    $tokens_visitor, 
                                    0, 
                                    prefix-len(
                                        len($tokens_visitor), 'Jaccard', .5))

    where $prefix_token_user = $prefix_token_visitor

    let $sim := similarity(
                    len($user.lottery_numbers),
                    $tokens_user,
                    len($visitor.lottery_numbers),
                    $tokens_visitor,
                    $prefix_token_user,
                    'Jaccard',
                    .5)
    where $sim >= .5
    group by $uid := $user.uid, $vid := $visitor.vid with $sim
    return { 'uid': $uid, 'vid': $vid, 'sim': $sim[0] }

for $user in dataset('Users')
for $visitor in dataset('Visitors')
where $ridpair.uid = $user.uid and $ridpair.vid = $visitor.vid
return { 'user': $user, 'visitor': $visitor, 'sim': $ridpair.sim }
