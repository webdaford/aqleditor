drop dataverse fuzzyjoin_078 if exists;

create dataverse fuzzyjoin_078;

use dataverse fuzzyjoin_078;

create type DBLPType as open {
  id: int32, 
  dblpid: string,
  title: string,
  authors: string,
  misc: string
}

create nodegroup group1 if not exists on nc1, nc2;

create dataset DBLP_fuzzyjoin_078(DBLPType) 
  primary key id on group1;

write output to nc1:'rttest/fuzzyjoin_078.adm';

    //
    // -- - Stage 2 - --
    //
    for $paperDBLP in dataset('DBLP_fuzzyjoin_078')
    let $unrankedTokensDBLP := counthashed-word-tokens($paperDBLP.title)
    let $tokensDBLP :=
        for $token in $unrankedTokensDBLP
        for $tokenRanked at $i in
            //
            // -- - Stage 1 - --
            //
            for $paper in dataset('DBLP_fuzzyjoin_078')
            for $token in counthashed-word-tokens($paper.title)
            /*+ hash */ 
            group by $tokenGroupped := $token with $paper
            /*+ inmem 1 302 */
            order by count($paper), $tokenGroupped
            return $tokenGroupped
        where $token = /*+ bcast */ $tokenRanked
        order by $i
        return $i
    order by $paperDBLP.id
    return {'id': $paperDBLP.id, 'tokens':$tokensDBLP}
