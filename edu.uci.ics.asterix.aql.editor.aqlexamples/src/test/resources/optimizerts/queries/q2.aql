drop dataverse events if exists;
create dataverse events;
use dataverse events;


create type AddressType as closed {
  street: string,
  city: string,
  zip: string
 //, latlong: point
}

create type EventType as closed {
  name: string,
  location: AddressType	?,
  organizers: {{ 
   {
     name: string,
     role: string
   }
  }},
  sponsoring_sigs: [
    {
      sig_name: string,
      chapter_name: string
    }
  ],
  interest_keywords: {{string}},
  price: double?,
  start_time: datetime,
  end_time: datetime
}


create nodegroup group1 if not exists on nc1, nc2;

create dataset Event(EventType) primary key name on group1;

write output to nc1:"/tmp/q2.adm";

for $event in dataset('Event')
for $sponsor in $event.sponsoring_sigs
let $es := { "event": $event, "sponsor": $sponsor }
group by $sig_name := $sponsor.sig_name with $es
let $sig_sponsorship_count := count($es)
let $by_chapter :=
   for $e in $es
   group by $chapter_name := $e.sponsor.chapter_name with $e
   return { "chapter_name": $chapter_name, "escount" : count($e) }
order by $sig_sponsorship_count desc
limit 5
return { "sig_name": $sig_name, "total_count": $sig_sponsorship_count, "chapter_breakdown": $by_chapter }
